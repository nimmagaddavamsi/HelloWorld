private static String generateInsertQuery(String keyspace, String table, Row row) {
    String columns = row.getColumnDefinitions().asList().stream()
            .map(column -> column.getName().asInternal())
            .collect(Collectors.joining(", "));

    String values = row.getColumnDefinitions().asList().stream()
            .map(column -> {
                if (column.getType().asCql(true).equals("blob")) {
                    // Handle BLOB: Convert ByteBuffer to hex string
                    ByteBuffer blobValue = row.getByteBuffer(column.getName().asInternal());
                    return blobValue != null ? String.format("0x%s", bytesToHex(blobValue.array())) : "null";
                } else {
                    return "'" + row.getObject(column.getName().asInternal()) + "'";
                }
            })
            .collect(Collectors.joining(", "));

    return String.format("INSERT INTO %s.%s (%s) VALUES (%s)", keyspace, table, columns, values);
}

private static String bytesToHex(byte[] bytes) {
    StringBuilder hexString = new StringBuilder();
    for (byte b : bytes) {
        String hex = Integer.toHexString(0xFF & b);
        if (hex.length() == 1) {
            hexString.append('0');
        }
        hexString.append(hex);
    }
    return hexString.toString();
}



if (column.getType().asCql(true).equals("blob")) {
            // Handle BLOB: Convert ByteBuffer to hex string
            ByteBuffer blobValue = row.getByteBuffer(columnName);
            if (blobValue != null) {
                values.append("0x").append(bytesToHex(blobValue.array())).append(", ");
            } else {
                values.append("null, ");
            }
        } else {
            values.append("'").append(row.getObject(columnName)).append("', ");
        }
